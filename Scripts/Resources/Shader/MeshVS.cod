//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 materialColor;              // Offset:   64 Size:    16
//   row_major float4x4 boneTransforms[256];// Offset:   80 Size: 16384
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPosition;             // Offset:   64 Size:    16 [unused]
//   float4 lightDirection;             // Offset:   80 Size:    16 [unused]
//   float3 lightColor;                 // Offset:   96 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb0      1 
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
// BONES                    0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB1[1029], dynamicIndexed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.xyzw
dcl_temps 9
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.boneWeights.x; v4.y <- vin.boneWeights.y; v4.z <- vin.boneWeights.z; v4.w <- vin.boneWeights.w; 
//   v5.x <- vin.boneIndices.x; v5.y <- vin.boneIndices.y; v5.z <- vin.boneIndices.z; v5.w <- vin.boneIndices.w; 
//   o5.x <- <main return value>.color.x; o5.y <- <main return value>.color.y; o5.z <- <main return value>.color.z; o5.w <- <main return value>.color.w; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.worldTangent.x; o3.y <- <main return value>.worldTangent.y; o3.z <- <main return value>.worldTangent.z; o3.w <- <main return value>.worldTangent.w; 
//   o2.x <- <main return value>.worldNormal.x; o2.y <- <main return value>.worldNormal.y; o2.z <- <main return value>.worldNormal.z; o2.w <- <main return value>.worldNormal.w; 
//   o1.x <- <main return value>.worldPosition.x; o1.y <- <main return value>.worldPosition.y; o1.z <- <main return value>.worldPosition.z; o1.w <- <main return value>.worldPosition.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 5 "C:\Users\2220097\Desktop\„ÉÅE"
itof r0.x, l(0)  // r0.x <- vin.normal.w

#line 6
mov r0.y, v2.w  // r0.y <- sigma

#line 7
itof r0.z, l(0)  // r0.z <- vin.tangent.w

#line 9
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- blendedPosition.x; r1.y <- blendedPosition.y; r1.z <- blendedPosition.z

#line 10
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- blendedNormal.x; r2.y <- blendedNormal.y; r2.z <- blendedNormal.z

#line 11
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- blendedTangent.x; r3.y <- blendedTangent.y; r3.z <- blendedTangent.z

#line 12
mov r0.w, l(0)  // r0.w <- boneIndex
mov r4.xyz, r1.xyzx  // r4.x <- blendedPosition.x; r4.y <- blendedPosition.y; r4.z <- blendedPosition.z
mov r5.xyz, r2.xyzx  // r5.x <- blendedNormal.x; r5.y <- blendedNormal.y; r5.z <- blendedNormal.z
mov r6.xyz, r3.xyzx  // r6.x <- blendedTangent.x; r6.y <- blendedTangent.y; r6.z <- blendedTangent.z
mov r1.w, r0.w  // r1.w <- boneIndex
loop 
  ilt r2.w, r1.w, l(4)
  breakc_z r2.w

#line 14
  dp4 r2.w, v4.xyzw, icb[r1.w + 0].xyzw
  and r7.xyzw, v5.xyzw, icb[r1.w + 4].xyzw
  or r7.xy, r7.ywyy, r7.xzxx
  or r3.w, r7.y, r7.x
  imul null, r3.w, r3.w, l(4)
  mul r7.xyz, v0.xxxx, cb1[r3.w + 5].xyzx
  mul r8.xyz, v0.yyyy, cb1[r3.w + 6].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r8.xyz, v0.zzzz, cb1[r3.w + 7].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r8.xyz, v0.wwww, cb1[r3.w + 8].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r7.xyz, r2.wwww, r7.xyzx
  add r4.xyz, r4.xyzx, r7.xyzx

#line 15
  dp4 r2.w, v4.xyzw, icb[r1.w + 0].xyzw
  and r7.xyzw, v5.xyzw, icb[r1.w + 4].xyzw
  or r7.xy, r7.ywyy, r7.xzxx
  or r3.w, r7.y, r7.x
  imul null, r3.w, r3.w, l(4)
  mul r7.xyz, v1.xxxx, cb1[r3.w + 5].xyzx
  mul r8.xyz, v1.yyyy, cb1[r3.w + 6].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r8.xyz, v1.zzzz, cb1[r3.w + 7].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r8.xyz, r0.xxxx, cb1[r3.w + 8].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r7.xyz, r2.wwww, r7.xyzx
  add r5.xyz, r5.xyzx, r7.xyzx

#line 16
  dp4 r2.w, v4.xyzw, icb[r1.w + 0].xyzw
  and r7.xyzw, v5.xyzw, icb[r1.w + 4].xyzw
  or r7.xy, r7.ywyy, r7.xzxx
  or r3.w, r7.y, r7.x
  imul null, r3.w, r3.w, l(4)
  mul r7.xyz, v2.xxxx, cb1[r3.w + 5].xyzx
  mul r8.xyz, v2.yyyy, cb1[r3.w + 6].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r8.xyz, v2.zzzz, cb1[r3.w + 7].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r8.xyz, r0.zzzz, cb1[r3.w + 8].xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r7.xyz, r2.wwww, r7.xyzx
  add r6.xyz, r6.xyzx, r7.xyzx

#line 17
  iadd r1.w, r1.w, l(1)
endloop 

#line 18
mov r4.xyz, r4.xyzx  // r4.x <- vin.position.x; r4.y <- vin.position.y; r4.z <- vin.position.z
mov r0.x, l(1.000000)  // r0.x <- vin.position.w

#line 19
mov r5.w, l(0)
mov r5.xyzw, r5.xyzw  // r5.x <- vin.normal.x; r5.y <- vin.normal.y; r5.z <- vin.normal.z; r5.w <- vin.normal.w

#line 20
mov r6.w, l(0)
mov r6.xyzw, r6.xyzw  // r6.x <- vin.tangent.x; r6.y <- vin.tangent.y; r6.z <- vin.tangent.z; r6.w <- vin.tangent.w

#line 23
mul r1.xyzw, cb1[0].xxxx, cb0[0].xyzw
mul r2.xyzw, cb1[0].yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[0].zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[0].wwww, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[1].xxxx, cb0[0].xyzw
mul r3.xyzw, cb1[1].yyyy, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[1].zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[1].wwww, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[2].xxxx, cb0[0].xyzw
mul r7.xyzw, cb1[2].yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
mul r7.xyzw, cb1[2].zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
mul r7.xyzw, cb1[2].wwww, cb0[3].xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
mul r7.xyzw, cb1[3].xxxx, cb0[0].xyzw
mul r8.xyzw, cb1[3].yyyy, cb0[1].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[3].zzzz, cb0[2].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[3].wwww, cb0[3].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r1.xyzw, r1.xyzw, r4.xxxx
mul r2.xyzw, r2.xyzw, r4.yyyy
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r3.xyzw, r4.zzzz
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.xxxx, r7.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.position.x; r1.y <- vout.position.y; r1.z <- vout.position.z; r1.w <- vout.position.w

#line 25
mul r2.xyzw, r4.xxxx, cb1[0].xyzw
mul r3.xyzw, r4.yyyy, cb1[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r4.zzzz, cb1[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.xxxx, cb1[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- vout.worldPosition.x; r2.y <- vout.worldPosition.y; r2.z <- vout.worldPosition.z; r2.w <- vout.worldPosition.w

#line 26
mul r3.xyzw, r5.xxxx, cb1[0].xyzw
mul r4.xyzw, r5.yyyy, cb1[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r5.zzzz, cb1[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r5.wwww, cb1[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
dp4 r0.x, r3.xyzw, r3.xyzw
rsq r0.x, r0.x
mul r3.xyzw, r0.xxxx, r3.xyzw  // r3.x <- vout.worldNormal.x; r3.y <- vout.worldNormal.y; r3.z <- vout.worldNormal.z; r3.w <- vout.worldNormal.w

#line 27
mul r4.xyzw, r6.xxxx, cb1[0].xyzw
mul r5.xyzw, r6.yyyy, cb1[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r6.zzzz, cb1[2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r6.wwww, cb1[3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
dp4 r0.x, r4.xyzw, r4.xyzw
rsq r0.x, r0.x
mul r0.xzw, r0.xxxx, r4.xxyz  // r0.x <- vout.worldTangent.x; r0.z <- vout.worldTangent.y; r0.w <- vout.worldTangent.z

#line 28
mov r0.y, r0.y  // r0.y <- vout.worldTangent.w

#line 30
mov r4.xy, v3.xyxx  // r4.x <- vout.texcoord.x; r4.y <- vout.texcoord.y

#line 33
mov r5.xyzw, cb1[4].xyzw  // r5.x <- vout.color.x; r5.y <- vout.color.y; r5.z <- vout.color.z; r5.w <- vout.color.w

#line 50
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r2.xyzw
mov o2.xyzw, r3.xyzw
mov o3.xyz, r0.xzwx
mov o3.w, r0.y
mov o5.xyzw, r5.xyzw
mov o4.xy, r4.xyxx
ret 
// Approximately 137 instruction slots used
